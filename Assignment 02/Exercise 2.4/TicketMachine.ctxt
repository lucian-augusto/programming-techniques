#BlueJ class context
comment0.target=TicketMachine
comment0.text=\n\ TicketMachine\ models\ a\ naive\ ticket\ machine\ that\ issues\n\ flat-fare\ tickets.\n\ The\ price\ of\ a\ ticket\ is\ specified\ via\ the\ constructor.\n\ It\ is\ a\ naive\ machine\ in\ the\ sense\ that\ it\ trusts\ its\ users\n\ to\ insert\ enough\ money\ before\ trying\ to\ print\ a\ ticket.\n\ It\ also\ assumes\ that\ users\ enter\ sensible\ amounts.\n\n\ @author\ David\ J.\ Barnes\ and\ Michael\ Kolling\n\ @version\ 2002.02.06\n
comment1.params=ticketCost
comment1.target=TicketMachine(int)
comment1.text=\n\ Create\ a\ machine\ that\ issues\ tickets\ of\ the\ given\ price.\n\ Note\ that\ the\ price\ must\ be\ greater\ than\ zero,\ and\ there\n\ are\ no\ checks\ to\ ensure\ this.\n
comment2.params=
comment2.target=TicketMachine()
comment2.text=\n\ Constructor\ that\ creates\ an\ instance\ of\ the\ TicketMachine\ class\ using\n\ a\ preset\ value\ (777\ in\ this\ case).\ We\ are\ using\ the\ reserved\ word\ \n\ "this"\ to\ call\ the\ constructor\ which\ has\ an\ int\ type\ variable\ as\ a\ \n\ parameter.\ So,\ the\ constructor\ without\ parameters\ actually\ calls\ the\ \n\ constructor\ with\ parameter\ and\ passes\ the\ value\ 777\ as\ a\ parameter,\ \n\ creating\ an\ instance\ of\ TicketMachine\ with\ 777\ as\ the\ value\ of\ the\ \n\ "price"\ instance\ variable.\n
comment3.params=
comment3.target=int\ getPrice()
comment3.text=\n\ Return\ the\ price\ of\ a\ ticket.\n
comment4.params=
comment4.target=int\ getBalance()
comment4.text=\n\ Return\ the\ amount\ of\ money\ already\ inserted\ for\ the\n\ next\ ticket.\n
comment5.params=amount
comment5.target=void\ insertMoney(int)
comment5.text=\n\ Receive\ an\ amount\ of\ money\ in\ cents\ from\ a\ customer.\n
comment6.params=
comment6.target=void\ printTicket()
comment6.text=\n\ Print\ a\ ticket.\n\ Update\ the\ total\ collected\ and\n\ reduce\ the\ balance\ to\ zero.\n
numComments=7
